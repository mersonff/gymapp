name: Deploy to Google Cloud Run

on:
  workflow_dispat    - name: Run DB Migrations
      run: |
        # Usar timestamp para nome único do job
        JOB_NAME="gymapp-migrate-$(date +%s)"
        
        # Criar job de migração com nome único
        gcloud run jobs create $JOB_NAME \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/gymapp-repo/$SERVICE_NAME:latest \
          --region $REGION \
          --service-account $SERVICE_ACCOUNT \
          --set-cloudsql-instances $CLOUDSQL_INSTANCE \
          --set-env-vars RAILS_ENV=staging \
          --set-secrets DB_HOST=DB_HOST:latest \
          --set-secrets DB_USERNAME=DB_USERNAME:latest \
          --set-secrets DB_PASSWORD=DB_PASSWORD:latest \
          --set-secrets SECRET_KEY_BASE=SECRET_KEY_BASE:latest \
          --command bundle \
          --args exec,rails,db:migrate
        
        # Executar job de migração
        gcloud run jobs execute $JOB_NAME --region $REGION --wait
        
        # Deletar job após execução
        gcloud run jobs delete $JOB_NAME --region $REGION --quiet || trueranches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: gymapp
  REGION: us-central1
  SERVICE_ACCOUNT: github-actions@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com
  CLOUDSQL_INSTANCE: ${{ secrets.GCP_PROJECT_ID }}:us-central1:gymapp-db

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/gymapp-repo/$SERVICE_NAME:latest .
        docker push us-central1-docker.pkg.dev/$PROJECT_ID/gymapp-repo/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/gymapp-repo/$SERVICE_NAME:latest \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --service-account $SERVICE_ACCOUNT \
          --add-cloudsql-instances $CLOUDSQL_INSTANCE \
          --set-env-vars RAILS_ENV=staging \
          --set-secrets DB_HOST=DB_HOST:latest \
          --set-secrets DB_USERNAME=DB_USERNAME:latest \
          --set-secrets DB_PASSWORD=DB_PASSWORD:latest \
          --set-secrets SECRET_KEY_BASE=SECRET_KEY_BASE:latest \
          --memory 1Gi \
          --cpu 1 \
          --port 3000

    - name: Run DB Migrations
      run: |
        # Deletar job existente se houver
        gcloud run jobs delete gymapp-migrate --region $REGION --quiet || true
        
        # Criar novo job de migração
        gcloud run jobs create gymapp-migrate \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/gymapp-repo/$SERVICE_NAME:latest \
          --region $REGION \
          --service-account $SERVICE_ACCOUNT \
          --set-cloudsql-instances $CLOUDSQL_INSTANCE \
          --set-env-vars RAILS_ENV=gcp \
          --set-secrets DB_HOST=DB_HOST:latest \
          --set-secrets DB_USERNAME=DB_USERNAME:latest \
          --set-secrets DB_PASSWORD=DB_PASSWORD:latest \
          --set-secrets SECRET_KEY_BASE=SECRET_KEY_BASE:latest \
          --command bundle \
          --args exec,rails,db:migrate
        
        # Executar job de migração
        gcloud run jobs execute gymapp-migrate --region $REGION --wait
