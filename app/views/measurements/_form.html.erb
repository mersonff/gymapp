<div class="bg-white shadow-lg rounded-lg p-8">
  <%= form_with(model: [@client, @measurement], local: true, class: "space-y-8") do |f| %>
    
    <% if @measurement.errors.any? %>
      <div class="bg-red-50 border border-red-200 rounded-lg p-4">
        <div class="flex">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">Erro ao salvar</h3>
            <div class="mt-2 text-sm text-red-700">
              <ul class="list-disc list-inside">
                <% @measurement.errors.full_messages.each do |message| %>
                  <li><%= message %></li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    <% end %>

    <!-- Seção: Dados Básicos -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-6">
      <h3 class="text-lg font-semibold text-blue-800 mb-4 flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16l3-1m-3 1l-3-1" />
        </svg>
        Dados Básicos
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="space-y-2">
          <%= f.label :height, "Altura (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :height, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200", 
              placeholder: "Ex: 177", 
              min: 50, 
              max: 250,
              onkeypress: "return isNumberKey(event)" %>
          <p class="text-xs text-gray-500">Centímetros (Ex: 1.77m = 177cm)</p>
        </div>
        
        <div class="space-y-2">
          <%= f.label :weight, "Peso (kg)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :weight, 
              step: 0.1, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 weight_mask", 
              placeholder: "Ex: 75.5", 
              min: 20, 
              max: 300 %>
          <p class="text-xs text-gray-500">Quilogramas com uma casa decimal</p>
        </div>
      </div>
    </div>

    <!-- Seção: Medidas do Tronco -->
    <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-6">
      <h3 class="text-lg font-semibold text-green-800 mb-4 flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
        </svg>
        Medidas do Tronco
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="space-y-2">
          <%= f.label :chest, "Tórax (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :chest, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:border-green-500 transition duration-200", 
              placeholder: "Ex: 95",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :waist, "Cintura (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :waist, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:border-green-500 transition duration-200", 
              placeholder: "Ex: 80",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :abdomen, "Abdômen (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :abdomen, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:border-green-500 transition duration-200", 
              placeholder: "Ex: 85",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :hips, "Quadril (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :hips, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:border-green-500 transition duration-200", 
              placeholder: "Ex: 90",
              onkeypress: "return isNumberKey(event)" %>
        </div>
      </div>
    </div>

    <!-- Seção: Medidas dos Membros -->
    <div class="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-6">
      <h3 class="text-lg font-semibold text-purple-800 mb-4 flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
        </svg>
        Medidas dos Membros
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="space-y-2">
          <%= f.label :left_arm, "Braço Esquerdo (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :left_arm, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition duration-200", 
              placeholder: "Ex: 32",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :right_arm, "Braço Direito (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :right_arm, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition duration-200", 
              placeholder: "Ex: 33",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :left_thigh, "Coxa Esquerda (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :left_thigh, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition duration-200", 
              placeholder: "Ex: 55",
              onkeypress: "return isNumberKey(event)" %>
        </div>
        
        <div class="space-y-2">
          <%= f.label :righ_thigh, "Coxa Direita (cm)", class: "block text-sm font-medium text-gray-700" %>
          <%= f.number_field :righ_thigh, 
              class: "w-full px-4 py-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition duration-200", 
              placeholder: "Ex: 56",
              onkeypress: "return isNumberKey(event)" %>
        </div>
      </div>
    </div>

    <!-- Botões de Ação -->
    <div class="flex flex-col sm:flex-row gap-4 pt-6 border-t border-gray-200">
      <div class="flex-1">
        <%= f.submit "Salvar Medidas", 
            class: "w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" %>
      </div>
      <div class="sm:w-auto">
        <%= link_to "Cancelar", :back, 
            class: "w-full sm:w-auto inline-flex justify-center items-center bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-3 px-6 rounded-lg shadow-md transition duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2" %>
      </div>
    </div>
  <% end %>
</div>

<script>
  // Função para permitir apenas números
  function isNumberKey(evt) {
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57))
      return false;
    return true;
  }

  // Auto-calcular IMC quando altura e peso forem preenchidos
  document.addEventListener('DOMContentLoaded', function() {
    const heightField = document.getElementById('measurement_height');
    const weightField = document.getElementById('measurement_weight');
    
    function calculateIMC() {
      if (heightField.value && weightField.value) {
        const height = parseFloat(heightField.value) / 100; // converter cm para metros
        const weight = parseFloat(weightField.value);
        const imc = (weight / (height * height)).toFixed(1);
        
        // Criar ou atualizar display do IMC
        let imcDisplay = document.getElementById('imc-display');
        if (!imcDisplay) {
          imcDisplay = document.createElement('div');
          imcDisplay.id = 'imc-display';
          imcDisplay.className = 'mt-4 p-3 bg-blue-100 border border-blue-300 rounded-lg';
          weightField.parentNode.appendChild(imcDisplay);
        }
        
        let imcClass = 'text-blue-600';
        let imcCategory = '';
        
        if (imc < 18.5) {
          imcClass = 'text-blue-600';
          imcCategory = 'Abaixo do peso';
        } else if (imc < 25) {
          imcClass = 'text-green-600';
          imcCategory = 'Peso normal';
        } else if (imc < 30) {
          imcClass = 'text-yellow-600';
          imcCategory = 'Sobrepeso';
        } else if (imc < 35) {
          imcClass = 'text-orange-600';
          imcCategory = 'Obesidade grau I';
        } else if (imc < 40) {
          imcClass = 'text-red-600';
          imcCategory = 'Obesidade grau II';
        } else {
          imcClass = 'text-red-800';
          imcCategory = 'Obesidade grau III';
        }
        
        imcDisplay.innerHTML = `
          <div class="flex items-center justify-between">
            <span class="text-sm font-medium text-blue-800">IMC calculado:</span>
            <div class="text-right">
              <span class="text-lg font-bold ${imcClass}">${imc}</span>
              <div class="text-xs ${imcClass}">${imcCategory}</div>
            </div>
          </div>
        `;
      }
    }
    
    if (heightField) heightField.addEventListener('input', calculateIMC);
    if (weightField) weightField.addEventListener('input', calculateIMC);
  });
</script>